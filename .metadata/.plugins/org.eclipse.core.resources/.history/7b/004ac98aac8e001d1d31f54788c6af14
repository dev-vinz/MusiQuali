
package ch.hearc.jee.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import ch.hearc.jee.model.User;
import ch.hearc.jee.service.impl.UserService;

@Controller
public class UserController
	{

	/*------------------------------------------------------------------*\
	|*							Constructeurs							*|
	\*------------------------------------------------------------------*/

	/*------------------------------------------------------------------*\
	|*							Methodes Public							*|
	\*------------------------------------------------------------------*/

	@GetMapping(value = { "/profile" })
	public String showProfileView()
		{
		return "user/profile";
		}

	@GetMapping(value = { "/login" })
	public String showLoginView()
		{
		return "user/login";
		}

	@GetMapping(value = { "/register" })
	public String showRegisterView(Model model)
		{
		model.addAttribute("user", new User());

		return "user/register";
		}

	@PostMapping(value = { "register/save" })
	String registerUser(@Validated @ModelAttribute("user") User user, @RequestParam String confirmPassword, BindingResult result, Model model)
		{
		User existingUser = this.userService.getByEmail(user.getEmail());

		if (existingUser != null)
			{
			System.out.println(existingUser.getEmail());
			}

		if (existingUser != null && existingUser.getEmail() != null && !existingUser.getEmail().isEmpty())
			{
			System.out.println("ALLO");
			result.rejectValue("email", null, "Un compte est déjà enregistré avec le même email");
			}

		if (result.hasErrors())
			{
			model.addAttribute("user", user);
			return "/register";
			}

		this.userService.add(user);
		return "redirect:/register?success";
		}

	/*------------------------------*\
	|*				Get				*|
	\*------------------------------*/

	/*------------------------------------------------------------------*\
	|*							Methodes Private						*|
	\*------------------------------------------------------------------*/

	/*------------------------------------------------------------------*\
	|*							Attributs Private						*|
	\*------------------------------------------------------------------*/

	@Autowired
	private UserService userService;
	}
